cabal-version:       2.4
name:                cascade-api
version:             0.0.0.0
synopsis:            Cascade Web API
description:         Cascade Web API
license:             MPL-2.0
license-file:        LICENSE
author:              Mohammad Hasani
maintainer:          Mohammad Hasani <the-dr-lazy@pm.me>
copyright:           2021 Mohammad Hasani
category:            Web
build-type:          Custom
extra-doc-files:     CHANGELOG.md
tested-with:         GHC == 8.8.4

common common-options
  build-depends:       aeson
                     , base-noprelude
                     , bytestring
                     , cascade-prelude
                     , containers
                     , generic-lens
                     , lens
                     , polysemy
                     , polysemy-plugin
                     , postgresql-simple
                     , servant
                     , text
                     , uuid
                     , word8

  default-language:    Haskell2010
  -- Based on
  -- https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
  --
  -- Trivial lifting of standards-imposed limitations
  default-extensions:  EmptyCase
                       FlexibleContexts
                       FlexibleInstances
                       InstanceSigs
                       MultiParamTypeClasses
                       -- Syntactic conveniences
                       LambdaCase
                       MultiWayIf
                       NamedFieldPuns
                       TupleSections
                       ApplicativeDo
                       PatternSynonyms
                       BangPatterns
                       KindSignatures
                       TypeOperators
                       DefaultSignatures
                       Arrows
                       BlockArguments
                       RecordWildCards
                       -- Extensions to the deriving mechanism
                       DeriveFoldable
                       DeriveFunctor
                       DeriveGeneric
                       DeriveLift
                       DeriveTraversable
                       DeriveAnyClass
                       DerivingVia
                       DerivingStrategies
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       -- Polymorphic string literals
                       OverloadedStrings
                       -- Extensions to aid type annotation
                       ScopedTypeVariables
                       TypeApplications
                       -- Extensions to the Haskell type system
                       ConstraintKinds
                       RankNTypes
                       GADTs
                       ExistentialQuantification
                       FunctionalDependencies
                       DataKinds
                       PolyKinds
                       TypeFamilies
                       TypeFamilyDependencies
                       -- Extension to boilerplate generation
                       TemplateHaskell
                       -- Extensions to the generic-lens!
                       DuplicateRecordFields
                       OverloadedLabels
                       -- Make laziness your power
                       StrictData
  -- For details on warnings:
  -- https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
  -- This list taken from https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3#
  -- Enable all warnings with -Weverything, then disable the ones we don’t care about
  ghc-options:         -Weverything
                       -- missing-exported-signatures turns off the more strict -Wmissing-signatures.
                       -- See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
                       -Wno-missing-exported-signatures
                       -- Requires explicit imports of _every_ function (e.g. ‘$’); too strict
                       -Wno-missing-import-lists
                       -- Don't warn implicit prelude
                       -Wno-implicit-prelude
                       -- When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
                       -Wno-missed-specialisations
                       -- See missed-specialisations
                       -Wno-all-missed-specialisations
                       -- Don’t use Safe Haskell warnings
                       -Wno-unsafe
                       -Wno-safe
                       -- Warning for polymorphic local bindings; nothing wrong with those.
                       -Wno-missing-local-signatures
                       -- Don’t warn if the monomorphism restriction is used
                       -Wno-monomorphism-restriction


custom-setup
  setup-depends:       base
                     , autopack

library
  import:              common-options
  hs-source-dirs:      src
  build-depends:       attoparsec
                     , beam-core
                     , beam-postgres
                     , chronos
                     , cookie
                     , either
                     , email-validate
                     , generic-monoid
                     , http-media
                     , http-types
                     , libjwt-typed
                     , relude
                     , scrypt
                     , selective
                     , servant-server
                     , validation-selective
                     , wai
                     , warp

  -- Enable polysemy-plugin
  ghc-options:         -fplugin=Polysemy.Plugin

test-suite cascade-api-test
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Main.hs
  build-depends:       cascade-api
                     , directory
                     , filepath
                     , free
                     , hedgehog
                     , http-client
                     , http-types
                     , lifted-async
                     , lifted-base
                     , managed
                     , monad-control
                     , port-utils
                     , postgres-options
                     , relude
                     , resource-pool
                     , servant-client
                     , servant-client-core
                     , tasty
                     , tasty-hedgehog
                     , tmp-postgres
                     , typed-process
                     , chronos
                     , validation-selective

  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N
  other-modules:       Cascade.Api.Hedgehog.Gen
                       Cascade.Api.Hedgehog.Gen.Api.Project
                       Cascade.Api.Hedgehog.Gen.Id
                       Cascade.Api.Hedgehog.Gen.Prelude
                       Cascade.Api.Hedgehog.Gen.Text
                       Cascade.Api.Hedgehog.Gen.Chronos
                       Cascade.Api.Network.TestClient
                       Cascade.Api.Network.TestClient.Api
                       Cascade.Api.Network.TestClient.Api.Projects
                       Cascade.Api.Network.TestClient.Api.Projects.Tasks
                       Cascade.Api.Network.TestClient.Api.Users
                       Cascade.Api.Test.FilePath
                       Cascade.Api.Test.Prelude
                       Cascade.Api.Test.Prelude.Orphans
                       Cascade.Api.Test.Resource
                       Test.Cascade.Api.StateMachine
                       Test.Cascade.Api.StateMachine.Command.Project
                       Test.Cascade.Api.StateMachine.Command.User
                       Test.Cascade.Api.StateMachine.Command.Task
                       Test.Cascade.Api.StateMachine.Model

benchmark cascade-api-benchmark
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benchmark
  main-is:             Main.hs
  build-depends:       gauge
                     , cascade-api
  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N
