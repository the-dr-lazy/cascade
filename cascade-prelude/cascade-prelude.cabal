cabal-version:       2.4
name:                cascade-prelude
version:             0.0.0.0
synopsis:            Cascade custom prelude
description:         Cascade custom prelude
license:             MPL-2.0
license-file:        LICENSE
author:              Mohammad Hasani
maintainer:          Mohammad Hasani <the-dr-lazy@pm.me>
copyright:           2021 Mohammad Hasani
build-type:          Simple
extra-doc-files:     CHANGELOG.md
tested-with:         GHC == 8.8.4

common common-options
  default-language:    Haskell2010
  build-depends:       bytestring
  -- Based on
  -- https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
  --
  -- Trivial lifting of standards-imposed limitations
  default-extensions:  EmptyCase
                       FlexibleContexts
                       FlexibleInstances
                       InstanceSigs
                       MultiParamTypeClasses
                       -- Syntactic conveniences
                       LambdaCase
                       MultiWayIf
                       NamedFieldPuns
                       TupleSections
                       ApplicativeDo
                       PatternSynonyms
                       BangPatterns
                       KindSignatures
                       TypeOperators
                       DefaultSignatures
                       Arrows
                       BlockArguments
                       RecordWildCards
                       -- Extensions to the deriving mechanism
                       DeriveFoldable
                       DeriveFunctor
                       DeriveGeneric
                       DeriveLift
                       DeriveTraversable
                       DeriveAnyClass
                       DerivingVia
                       DerivingStrategies
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       -- Polymorphic string literals
                       OverloadedStrings
                       -- Extensions to aid type annotation
                       ScopedTypeVariables
                       TypeApplications
                       -- Extensions to the Haskell type system
                       ConstraintKinds
                       RankNTypes
                       GADTs
                       ExistentialQuantification
                       FunctionalDependencies
                       DataKinds
                       PolyKinds
                       TypeFamilies
                       TypeFamilyDependencies
                       -- Extension to boilerplate generation
                       TemplateHaskell
                       -- Extensions to the generic-lens!
                       DuplicateRecordFields
                       OverloadedLabels
                       -- Make laziness your power
                       StrictData
  -- For details on warnings:
  -- https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
  -- This list taken from https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3#
  -- Enable all warnings with -Weverything, then disable the ones we don’t care about
  ghc-options:         -Weverything
                       -- missing-exported-signatures turns off the more strict -Wmissing-signatures.
                       -- See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
                       -Wno-missing-exported-signatures
                       -- Requires explicit imports of _every_ function (e.g. ‘$’); too strict
                       -Wno-missing-import-lists
                       -- Don't warn implicit prelude
                       -Wno-implicit-prelude
                       -- When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
                       -Wno-missed-specialisations
                       -- See missed-specialisations
                       -Wno-all-missed-specialisations
                       -- Don’t use Safe Haskell warnings
                       -Wno-unsafe
                       -Wno-safe
                       -- Warning for polymorphic local bindings; nothing wrong with those.
                       -Wno-missing-local-signatures
                       -- Don’t warn if the monomorphism restriction is used
                       -Wno-monomorphism-restriction

library
  import:              common-options
  hs-source-dirs:      src
  exposed-modules:     Prelude
                       Cascade.Data.ByteString
                       Cascade.Data.Char
                       Cascade.Data.Text
                       Cascade.Data.Text.NonEmpty
                       Cascade.Data.Chronos.Future
  build-depends:       base-noprelude
                     , containers
                     , flow
                     , relude
                     , uuid
                     , word8
                     , text
                     , aeson
                     , lens
                     , chronos

test-suite cascade-prelude-test
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Main.hs
  build-depends:       base-noprelude
                     , cascade-prelude
                     , chronos
                     , hedgehog
                     , tasty
                     , tasty-hedgehog
                     , word8
  other-modules:       Test.Cascade.Data.ByteString
                       Test.Cascade.Data.Char
                       Test.Cascade.Data.Chronos.Future
                       Test.Cascade.Data.Text.NonEmpty
  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N
